/*
 * Module code.
 *
 * Generated by SIP 4.11.1 on Fri Dec 24 17:16:24 2010
 */

#include "sipAPI_bmainmod.h"

#line 39 "/usr/share/sip/QtCore/qobject.sip"
#include <qobject.h>
#line 12 "sip_bmainmodcmodule.cpp"

/* Define the strings used by this module. */
const char sipStrings__bmainmod[] = {
    'P', 'y', 'Q', 't', '4', '.', 'Q', 't', 'C', 'o', 'r', 'e', '.', 'p', 'y', 'q', 't', 'W', 'r', 'a', 'p', 'p', 'e', 'r', 'T', 'y', 'p', 'e', 0,
    'd', 'i', 's', 'p', 'l', 'a', 'y', 'U', 's', 'e', 'r', 'D', 'i', 'a', 'l', 'o', 'g', 'C', 'h', 'o', 'i', 'c', 'e', 0,
    'g', 'e', 't', 'T', 'i', 'l', 'e', 'C', 'o', 'u', 'n', 't', 'O', 'f', 'I', 'm', 'a', 'g', 'e', 0,
    'm', 'o', 'u', 's', 'e', 'R', 'e', 'l', 'e', 'a', 's', 'e', 'S', 'i', 'g', 'n', 'a', 'l', 0,
    'g', 'e', 't', 'L', 'i', 'n', 'e', 'O', 'f', 'T', 'h', 'i', 'c', 'k', 'n', 'e', 's', 's', 0,
    's', 'h', 'o', 'w', 'P', 'o', 'p', 'u', 'p', 'M', 'e', 'n', 'u', 'A', 't', 'A', 'b', 's', 0,
    'Q', 'V', 'e', 'c', 't', 'o', 'r', '<', 'Q', 'S', 't', 'r', 'i', 'n', 'g', '>', 0,
    'e', 'n', 't', 'e', 'r', 'E', 'v', 'e', 'n', 't', 'S', 'i', 'g', 'n', 'a', 'l', 0,
    'l', 'e', 'a', 'v', 'e', 'E', 'v', 'e', 'n', 't', 'S', 'i', 'g', 'n', 'a', 'l', 0,
    'm', 'o', 'u', 's', 'e', 'P', 'r', 'e', 's', 's', 'S', 'i', 'g', 'n', 'a', 'l', 0,
    'g', 'e', 't', 'U', 's', 'e', 'r', 'T', 'e', 'x', 't', 'I', 'n', 'p', 'u', 't', 0,
    'd', 'i', 's', 'c', 'o', 'n', 'n', 'e', 'c', 't', 'N', 'o', 't', 'i', 'f', 'y', 0,
    'm', 'o', 'u', 's', 'e', 'M', 'o', 'v', 'e', 'S', 'i', 'g', 'n', 'a', 'l', 0,
    's', 'h', 'o', 'w', 'P', 'o', 'p', 'u', 'p', 'M', 'e', 'n', 'u', 'A', 't', 0,
    'd', 'i', 's', 'p', 'l', 'a', 'y', 'T', 'o', 'o', 'l', 't', 'i', 'p', 0,
    'g', 'e', 't', 'M', 'a', 'i', 'n', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'g', 'e', 't', 'T', 'i', 'l', 'e', 's', 'e', 't', 'I', 'd', 0,
    'g', 'e', 't', 'T', 'i', 'l', 'e', 's', 'e', 't', 'H', 0,
    'g', 'e', 't', 'T', 'i', 'l', 'e', 's', 'e', 't', 'W', 0,
    'g', 'e', 't', 'F', 'i', 'l', 'e', 'n', 'a', 'm', 'e', 0,
    'c', 'h', 'a', 'n', 'g', 'e', 'I', 'm', 'a', 'g', 'e', 0,
    'c', 'u', 's', 't', 'o', 'm', 'E', 'v', 'e', 'n', 't', 0,
    'e', 'v', 'e', 'n', 't', 'F', 'i', 'l', 't', 'e', 'r', 0,
    'c', 'l', 'e', 'a', 'r', 'L', 'i', 'n', 'e', 's', 0,
    'd', 'e', 'l', 'e', 't', 'e', 'L', 'i', 'n', 'e', 0,
    'c', 'h', 'i', 'l', 'd', 'E', 'v', 'e', 'n', 't', 0,
    't', 'i', 'm', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'g', 'e', 't', 'H', 'i', 'd', 'd', 'e', 'n', 0,
    'a', 'd', 'j', 'u', 's', 't', 'C', 'a', 'm', 0,
    's', 'e', 't', 'H', 'i', 'd', 'd', 'e', 'n', 0,
    'r', 'e', 'c', 'e', 'i', 'v', 'e', 'r', 's', 0,
    '_', 'b', 'm', 'a', 'i', 'n', 'm', 'o', 'd', 0,
    'D', 'E', 'L', 'E', 'T', 'E', 'M', 'E', 0,
    's', 'e', 't', 'L', 'a', 'y', 'e', 'r', 0,
    's', 'e', 't', 'D', 'r', 'a', 'w', 'H', 0,
    's', 'e', 't', 'D', 'r', 'a', 'w', 'W', 0,
    'g', 'e', 't', 'L', 'a', 'y', 'e', 'r', 0,
    'g', 'e', 't', 'D', 'r', 'a', 'w', 'H', 0,
    'g', 'e', 't', 'D', 'r', 'a', 'w', 'W', 0,
    's', 'e', 't', 'T', 'i', 'l', 'e', 0,
    'g', 'e', 't', 'T', 'i', 'l', 'e', 0,
    'g', 'e', 't', 'Z', 'o', 'o', 'm', 0,
    's', 'e', 't', 'Z', 'o', 'o', 'm', 0,
    'g', 'e', 't', 'C', 'a', 'm', 'H', 0,
    'g', 'e', 't', 'C', 'a', 'm', 'W', 0,
    'g', 'e', 't', 'C', 'a', 'm', 'Y', 0,
    'g', 'e', 't', 'C', 'a', 'm', 'X', 0,
    'a', 'd', 'd', 'L', 'i', 'n', 'e', 0,
    'b', 'I', 'm', 'a', 'g', 'e', 0,
    's', 'e', 't', 'C', 'a', 'm', 0,
    's', 'e', 'n', 'd', 'e', 'r', 0,
    'g', 'e', 't', 'I', 'd', 0,
    'b', 'M', 'a', 'i', 'n', 0,
    'e', 'v', 'e', 'n', 't', 0,
    's', 't', 'a', 'r', 't', 0,
    'g', 'e', 't', 'H', 0,
    'g', 'e', 't', 'W', 0,
    'g', 'e', 't', 'Y', 0,
    'g', 'e', 't', 'X', 0,
    's', 'e', 't', 'Y', 0,
    's', 'e', 't', 'X', 0,
};


/*
 * This defines each type in this module.
 */
static sipTypeDef *typesTable[] = {
    &sipTypeDef__bmainmod_QVector_0100QString.mtd_base,
    &sipTypeDef__bmainmod_bImage.super.ctd_base,
    &sipTypeDef__bmainmod_bMain.super.ctd_base,
};


/* This defines the modules that this module needs to import. */
static sipImportedModuleDef importsTable[] = {
    {"PyQt4.QtCore", 0, NULL},
    {"PyQt4.QtGui", 0, NULL},
    {NULL, -1, NULL}
};


/* This defines this module. */
sipExportedModuleDef sipModuleAPI__bmainmod = {
    0,
    SIP_API_MINOR_NR,
    sipNameNr__bmainmod,
    0,
    -1,
    sipStrings__bmainmod,
    importsTable,
    NULL,
    3,
    typesTable,
    NULL,
    0,
    NULL,
    0,
    NULL,
    NULL,
    NULL,
    {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL},
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL
};


/* The SIP API and the APIs of any imported modules. */
const sipAPIDef *sipAPI__bmainmod;
const sipExportedModuleDef *sipModuleAPI__bmainmod_QtCore;
const sipExportedModuleDef *sipModuleAPI__bmainmod_QtGui;

sip_qt_metaobject_func sip__bmainmod_qt_metaobject;
sip_qt_metacall_func sip__bmainmod_qt_metacall;
sip_qt_metacast_func sip__bmainmod_qt_metacast;


/* The Python module initialisation function. */
#if PY_MAJOR_VERSION >= 3
#define SIP_MODULE_ENTRY        PyInit__bmainmod
#define SIP_MODULE_TYPE         PyObject *
#define SIP_MODULE_DISCARD(r)   Py_DECREF(r)
#define SIP_MODULE_RETURN(r)    return (r)
#else
#define SIP_MODULE_ENTRY        init_bmainmod
#define SIP_MODULE_TYPE         void
#define SIP_MODULE_DISCARD(r)
#define SIP_MODULE_RETURN(r)    return
#endif

#if defined(SIP_STATIC_MODULE)
extern "C" SIP_MODULE_TYPE SIP_MODULE_ENTRY()
#else
PyMODINIT_FUNC SIP_MODULE_ENTRY()
#endif
{
    static PyMethodDef sip_methods[] = {
        {0, 0, 0, 0}
    };

#if PY_MAJOR_VERSION >= 3
    static PyModuleDef sip_module_def = {
        PyModuleDef_HEAD_INIT,
        "_bmainmod",
        NULL,
        -1,
        sip_methods,
        NULL,
        NULL,
        NULL,
        NULL
    };
#endif

    PyObject *sipModule, *sipModuleDict;
#if !defined(SIP_USE_PYCAPSULE)
    PyObject *sip_sipmod, *sip_capiobj;
#endif

    /* Initialise the module and get it's dictionary. */
#if PY_MAJOR_VERSION >= 3
    sipModule = PyModule_Create(&sip_module_def);
#elif PY_VERSION_HEX >= 0x02050000
    sipModule = Py_InitModule(sipName__bmainmod, sip_methods);
#else
    sipModule = Py_InitModule(const_cast<char *>(sipName__bmainmod), sip_methods);
#endif

    if (sipModule == NULL)
        SIP_MODULE_RETURN(NULL);

    sipModuleDict = PyModule_GetDict(sipModule);

    /* Get the SIP module's API. */
#if defined(SIP_USE_PYCAPSULE)

    sipAPI__bmainmod = reinterpret_cast<const sipAPIDef *>(PyCapsule_Import("sip._C_API", 0));

    if (sipAPI__bmainmod == NULL)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(NULL);
    }

#else

#if PY_VERSION_HEX >= 0x02050000
    sip_sipmod = PyImport_ImportModule("sip");
#else
    sip_sipmod = PyImport_ImportModule(const_cast<char *>("sip"));
#endif

    if (sip_sipmod == NULL)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(NULL);
    }

    sip_capiobj = PyDict_GetItemString(PyModule_GetDict(sip_sipmod), "_C_API");

    if (sip_capiobj == NULL || !PyCObject_Check(sip_capiobj))
    {
        Py_DECREF(sip_sipmod);
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(NULL);
    }

    sipAPI__bmainmod = reinterpret_cast<const sipAPIDef *>(PyCObject_AsVoidPtr(sip_capiobj));

#endif

    /* Export the module and publish it's API. */
    if (sipExportModule(&sipModuleAPI__bmainmod,SIP_API_MAJOR_NR,SIP_API_MINOR_NR,0) < 0)
    {
#if !defined(SIP_USE_PYCAPSULE)
        Py_DECREF(sip_sipmod);
#endif
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(0);
    }

    sip__bmainmod_qt_metaobject = (sip_qt_metaobject_func)sipImportSymbol("qtcore_qt_metaobject");
    sip__bmainmod_qt_metacall = (sip_qt_metacall_func)sipImportSymbol("qtcore_qt_metacall");
    sip__bmainmod_qt_metacast = (sip_qt_metacast_func)sipImportSymbol("qtcore_qt_metacast");

    /* Initialise the module now all its dependencies have been set up. */
    if (sipInitModule(&sipModuleAPI__bmainmod,sipModuleDict) < 0)
    {
#if !defined(SIP_USE_PYCAPSULE)
        Py_DECREF(sip_sipmod);
#endif
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(0);
    }

    /* Get the APIs of the modules that this one is dependent on. */
    sipModuleAPI__bmainmod_QtCore = sipModuleAPI__bmainmod.em_imports[0].im_module;
    sipModuleAPI__bmainmod_QtGui = sipModuleAPI__bmainmod.em_imports[1].im_module;

    SIP_MODULE_RETURN(sipModule);
}
